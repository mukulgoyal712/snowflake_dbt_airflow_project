# Name your project! Project names should contain only lowercase characters
# and underscores. A good package name should reflect your organization's
# name or the intended use of these models
name: 'tpch_dbt_snowflake'
version: '1.0.0'

# This setting configures which "profile" dbt uses for this project.
profile: 'tpch_dbt_snowflake'

# These configurations specify where dbt should look for different types of files.
# The `model-paths` config, for example, states that models in this project can be
# found in the "models/" directory. You probably won't need to change these!
model-paths: ["models"]
analysis-paths: ["analyses"]
test-paths: ["tests"]
seed-paths: ["seeds"]
macro-paths: ["macros"]
snapshot-paths: ["snapshots"]

clean-targets:         # directories to be removed by `dbt clean`
  - "target"
  - "dbt_packages"


# Configuring models
# Full documentation: https://docs.getdbt.com/docs/configuring-models

# In this example config, we tell dbt to build all models in the example/
# directory as views. These settings can be overridden in the individual model
# files using the `{{ config(...) }}` macro.

on-run-start:
  - "CREATE SCHEMA IF NOT EXISTS tpch_elt.audits"
  - "CREATE TABLE IF NOT EXISTS tpch_elt.audits.audit_log (run_time TIMESTAMP, run_status VARCHAR(50))"
  - "INSERT INTO tpch_elt.audits.audit_log (run_time, run_status) VALUES (CURRENT_TIMESTAMP, 'started')"
on-run-end:
  - "INSERT INTO tpch_elt.audits.audit_log (run_time, run_status) VALUES (CURRENT_TIMESTAMP, 'completed')"

models:
  tpch_dbt_snowflake:
    # Config indicated by + and applies to all files under models/example/
    +materialized: view
    +schema: extras
    staging:
      +materialized: table
      +tags: 
        - staging
        - raw
    bronze:
      +schema: bronze
      +materialized: table
      +tags: bronze
      +pre-hook:
        - "CREATE TABLE IF NOT EXISTS tpch_elt.audits.audit_schema_tables (schema VARCHAR(50), run_time TIMESTAMP,  run_status VARCHAR(50))"
        - "INSERT INTO tpch_elt.audits.audit_schema_tables (schema, run_time, run_status) VALUES ('bronze', CURRENT_TIMESTAMP, 'started')"
      +post-hook:
        - "INSERT INTO tpch_elt.audits.audit_schema_tables (schema, run_time, run_status) VALUES ('bronze', CURRENT_TIMESTAMP, 'completed')"
    silver:
      +schema: silver
      +materialized: table
      +tags: 
        - silver
        - cleaned
        - transformed
      +pre-hook:
        - "CREATE TABLE IF NOT EXISTS tpch_elt.audits.audit_schema_tables (schema VARCHAR(50), run_time TIMESTAMP,  run_status VARCHAR(50))"
        - "INSERT INTO tpch_elt.audits.audit_schema_tables (schema, run_time, run_status) VALUES ('silver', CURRENT_TIMESTAMP, 'started')"
      +post-hook:
        - "INSERT INTO tpch_elt.audits.audit_schema_tables (schema, run_time, run_status) VALUES ('silver', CURRENT_TIMESTAMP, 'completed')"
    gold:
      +schema: gold
      +materialized: table
      +tags: 
        - gold
        - reporting
      +pre-hook:
        - "CREATE TABLE IF NOT EXISTS tpch_elt.audits.audit_schema_tables (schema VARCHAR(50), run_time TIMESTAMP,  run_status VARCHAR(50))"
        - "INSERT INTO tpch_elt.audits.audit_schema_tables (schema, run_time, run_status) VALUES ('gold', CURRENT_TIMESTAMP, 'started')"
      +post-hook:
        - "INSERT INTO tpch_elt.audits.audit_schema_tables (schema, run_time, run_status) VALUES ('gold', CURRENT_TIMESTAMP, 'completed')"

seeds:
  tpch_dbt_snowflake:
    - name: raw_region_seed
      config:
        delimiter: ","
        quote_columns: False
        materialized: view
        schema: seed
      column_types:
        region_id: integer
        region_name: varchar
        comment: varchar
        extra: varchar

snapshots:
  tpch_dbt_snowflake:
    +schema: tpch_silver
    +tags: snapshot

data_tests:
  tpch_dbt_snowflake:
    +tags: test

# metadata:
#   description: "The DBT project on TPCH dataset"
#   owner:
#     name: "Mukul Goyal"
#     email: "mukulgoyal712@gmail.com"